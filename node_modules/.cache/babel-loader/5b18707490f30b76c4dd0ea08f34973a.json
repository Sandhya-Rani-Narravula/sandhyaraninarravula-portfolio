{"ast":null,"code":"var _jsxFileName = \"/workspace/gregsithole-react-portfolio/src/components/skills/Skills.jsx\";\nimport React from \"react\";\nimport \"./Skills.css\";\nimport { motion } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst skillsData = [{\n  category: \"Languages\",\n  skills: [\"Python\", \"C\", \"C++\", \"C#\", \"Java\", \"JavaScript\", \"HTML\", \"CSS\", \"SQL\", \"Bash\"]\n}, {\n  category: \"Frameworks\",\n  skills: [\"PyTorch\", \"TensorFlow\", \"Keras\", \"JAX\", \"ONNX\", \"Hugging Face Transformers\", \"CI/CD\"]\n}, {\n  category: \"Tools\",\n  skills: [\"Git\", \"Docker\", \"EC2\", \"AIMET\", \"MLflow\", \"Weights & Biases\", \"TensorRT\", \"Open3D\", \"Apache Spark\", \"Ray\", \"Dask\"]\n}, {\n  category: \"Technologies\",\n  skills: [\"Deep Learning\", \"LLMs\", \"Reinforcement Learning\", \"AWS\", \"Kubernetes\", \"Multi-Agent RL (MARL)\", \"Model Compression\", \"Transfer Learning\", \"Computer Vision\", \"NLP\", \"Speech AI\", \"MLOps\", \"Edge AI\", \"Federated Learning\", \"OpenCV\", \"Lambda\"]\n}, {\n  category: \"Other Skills\",\n  skills: [\"Quantization\", \"Pruning\", \"AutoML\", \"Graph Neural Networks (GNNs)\", \"Transformer-Based AI\", \"Retrieval-Augmented Generation\", \"Model Deployment\", \"Performance Benchmarking\", \"Containerization\"]\n}];\n\nconst Skills = () => {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"skills container section\",\n    id: \"skills\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"section__title\",\n      children: \"Skills\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"skills__grid\",\n      children: skillsData.map((skillCategory, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"skills__category\",\n        initial: {\n          opacity: 0,\n          y: 20\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        transition: {\n          duration: 0.5,\n          delay: index * 0.2\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"skills__category-title\",\n          children: skillCategory.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"skills__list\",\n          children: skillCategory.skills.map((skill, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"skills__item\",\n            children: skill\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Skills;\nexport default Skills;\n\nvar _c;\n\n$RefreshReg$(_c, \"Skills\");","map":{"version":3,"names":["React","motion","skillsData","category","skills","Skills","map","skillCategory","index","opacity","y","duration","delay","skill","idx"],"sources":["/workspace/gregsithole-react-portfolio/src/components/skills/Skills.jsx"],"sourcesContent":["import React from \"react\";\nimport \"./Skills.css\";\nimport { motion } from \"framer-motion\";\n\nconst skillsData = [\n    {\n        category: \"Languages\",\n        skills: [\"Python\", \"C\", \"C++\", \"C#\", \"Java\", \"JavaScript\", \"HTML\", \"CSS\", \"SQL\", \"Bash\"],\n    },\n    {\n        category: \"Frameworks\",\n        skills: [\"PyTorch\", \"TensorFlow\", \"Keras\", \"JAX\", \"ONNX\", \"Hugging Face Transformers\", \"CI/CD\"],\n    },\n    {\n        category: \"Tools\",\n        skills: [\"Git\", \"Docker\", \"EC2\", \"AIMET\", \"MLflow\", \"Weights & Biases\", \"TensorRT\", \"Open3D\", \"Apache Spark\", \"Ray\", \"Dask\"],\n    },\n    {\n        category: \"Technologies\",\n        skills: [\"Deep Learning\", \"LLMs\", \"Reinforcement Learning\", \"AWS\", \"Kubernetes\", \"Multi-Agent RL (MARL)\", \"Model Compression\", \"Transfer Learning\", \"Computer Vision\", \"NLP\", \"Speech AI\", \"MLOps\", \"Edge AI\", \"Federated Learning\", \"OpenCV\", \"Lambda\"],\n    },\n    {\n        category: \"Other Skills\",\n        skills: [\"Quantization\", \"Pruning\", \"AutoML\", \"Graph Neural Networks (GNNs)\", \"Transformer-Based AI\", \"Retrieval-Augmented Generation\", \"Model Deployment\", \"Performance Benchmarking\", \"Containerization\"],\n    }\n];\n\nconst Skills = () => {\n    return (\n        <section className=\"skills container section\" id=\"skills\">\n            <h2 className=\"section__title\">Skills</h2>\n            <div className=\"skills__grid\">\n                {skillsData.map((skillCategory, index) => (\n                    <motion.div\n                        key={index}\n                        className=\"skills__category\"\n                        initial={{ opacity: 0, y: 20 }}\n                        animate={{ opacity: 1, y: 0 }}\n                        transition={{ duration: 0.5, delay: index * 0.2 }}\n                    >\n                        <h3 className=\"skills__category-title\">{skillCategory.category}</h3>\n                        <ul className=\"skills__list\">\n                            {skillCategory.skills.map((skill, idx) => (\n                                <li key={idx} className=\"skills__item\">\n                                    {skill}\n                                </li>\n                            ))}\n                        </ul>\n                    </motion.div>\n                ))}\n            </div>\n        </section>\n    );\n};\n\nexport default Skills;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,SAASC,MAAT,QAAuB,eAAvB;;AAEA,MAAMC,UAAU,GAAG,CACf;EACIC,QAAQ,EAAE,WADd;EAEIC,MAAM,EAAE,CAAC,QAAD,EAAW,GAAX,EAAgB,KAAhB,EAAuB,IAAvB,EAA6B,MAA7B,EAAqC,YAArC,EAAmD,MAAnD,EAA2D,KAA3D,EAAkE,KAAlE,EAAyE,MAAzE;AAFZ,CADe,EAKf;EACID,QAAQ,EAAE,YADd;EAEIC,MAAM,EAAE,CAAC,SAAD,EAAY,YAAZ,EAA0B,OAA1B,EAAmC,KAAnC,EAA0C,MAA1C,EAAkD,2BAAlD,EAA+E,OAA/E;AAFZ,CALe,EASf;EACID,QAAQ,EAAE,OADd;EAEIC,MAAM,EAAE,CAAC,KAAD,EAAQ,QAAR,EAAkB,KAAlB,EAAyB,OAAzB,EAAkC,QAAlC,EAA4C,kBAA5C,EAAgE,UAAhE,EAA4E,QAA5E,EAAsF,cAAtF,EAAsG,KAAtG,EAA6G,MAA7G;AAFZ,CATe,EAaf;EACID,QAAQ,EAAE,cADd;EAEIC,MAAM,EAAE,CAAC,eAAD,EAAkB,MAAlB,EAA0B,wBAA1B,EAAoD,KAApD,EAA2D,YAA3D,EAAyE,uBAAzE,EAAkG,mBAAlG,EAAuH,mBAAvH,EAA4I,iBAA5I,EAA+J,KAA/J,EAAsK,WAAtK,EAAmL,OAAnL,EAA4L,SAA5L,EAAuM,oBAAvM,EAA6N,QAA7N,EAAuO,QAAvO;AAFZ,CAbe,EAiBf;EACID,QAAQ,EAAE,cADd;EAEIC,MAAM,EAAE,CAAC,cAAD,EAAiB,SAAjB,EAA4B,QAA5B,EAAsC,8BAAtC,EAAsE,sBAAtE,EAA8F,gCAA9F,EAAgI,kBAAhI,EAAoJ,0BAApJ,EAAgL,kBAAhL;AAFZ,CAjBe,CAAnB;;AAuBA,MAAMC,MAAM,GAAG,MAAM;EACjB,oBACI;IAAS,SAAS,EAAC,0BAAnB;IAA8C,EAAE,EAAC,QAAjD;IAAA,wBACI;MAAI,SAAS,EAAC,gBAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAK,SAAS,EAAC,cAAf;MAAA,UACKH,UAAU,CAACI,GAAX,CAAe,CAACC,aAAD,EAAgBC,KAAhB,kBACZ,QAAC,MAAD,CAAQ,GAAR;QAEI,SAAS,EAAC,kBAFd;QAGI,OAAO,EAAE;UAAEC,OAAO,EAAE,CAAX;UAAcC,CAAC,EAAE;QAAjB,CAHb;QAII,OAAO,EAAE;UAAED,OAAO,EAAE,CAAX;UAAcC,CAAC,EAAE;QAAjB,CAJb;QAKI,UAAU,EAAE;UAAEC,QAAQ,EAAE,GAAZ;UAAiBC,KAAK,EAAEJ,KAAK,GAAG;QAAhC,CALhB;QAAA,wBAOI;UAAI,SAAS,EAAC,wBAAd;UAAA,UAAwCD,aAAa,CAACJ;QAAtD;UAAA;UAAA;UAAA;QAAA,QAPJ,eAQI;UAAI,SAAS,EAAC,cAAd;UAAA,UACKI,aAAa,CAACH,MAAd,CAAqBE,GAArB,CAAyB,CAACO,KAAD,EAAQC,GAAR,kBACtB;YAAc,SAAS,EAAC,cAAxB;YAAA,UACKD;UADL,GAASC,GAAT;YAAA;YAAA;YAAA;UAAA,QADH;QADL;UAAA;UAAA;UAAA;QAAA,QARJ;MAAA,GACSN,KADT;QAAA;QAAA;QAAA;MAAA,QADH;IADL;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAyBH,CA1BD;;KAAMH,M;AA4BN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}